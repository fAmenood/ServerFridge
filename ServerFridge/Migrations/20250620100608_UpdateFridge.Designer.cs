// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ServerFridge.DataContext;

#nullable disable

namespace ServerFridge.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250620100608_UpdateFridge")]
    partial class UpdateFridge
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ServerFridge.Models.Fridge", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Fridge Id");

                    b.Property<Guid>("ModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("OwnerName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.HasIndex("ModelId");

                    b.ToTable("Fridges");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2fcd1d29-5c3b-4089-b3d1-ec8524069741"),
                            ModelId = new Guid("3b93b477-08a5-4e4d-8fb7-637c47adbea1"),
                            Name = "Appolon",
                            OwnerName = "Ivan Ivanov"
                        },
                        new
                        {
                            Id = new Guid("6092b048-afaf-429c-a95a-07f57ca3a58f"),
                            ModelId = new Guid("aaaea151-8e40-4276-8a6a-1c275b120c1f"),
                            Name = "Oxygen 3.0",
                            OwnerName = "Alex Alexdrov"
                        },
                        new
                        {
                            Id = new Guid("2f46b686-1436-46db-a85c-9863bcadd7ea"),
                            ModelId = new Guid("3b93b477-08a5-4e4d-8fb7-637c47adbea1"),
                            Name = "Nevermore",
                            OwnerName = "Nikolai Nikolaev"
                        });
                });

            modelBuilder.Entity("ServerFridge.Models.FridgeModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ModelId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FridgeModels");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3b93b477-08a5-4e4d-8fb7-637c47adbea1"),
                            Name = "Lenovo",
                            Year = 2014
                        },
                        new
                        {
                            Id = new Guid("aaaea151-8e40-4276-8a6a-1c275b120c1f"),
                            Name = "Xiaomi",
                            Year = 2013
                        });
                });

            modelBuilder.Entity("ServerFridge.Models.FridgeProducts", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FridgeProductId");

                    b.Property<Guid>("FridgeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FridgeId");

                    b.HasIndex("ProductId");

                    b.ToTable("FridgeProducts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("30ed1b4b-b7f2-4fe5-9daa-608c8083ccff"),
                            FridgeId = new Guid("2fcd1d29-5c3b-4089-b3d1-ec8524069741"),
                            ProductId = new Guid("20fadc8c-7b02-4668-b652-073bcde750fc"),
                            Quantity = 10
                        },
                        new
                        {
                            Id = new Guid("ffa74149-1ab8-42cf-9015-b4ffb95b0762"),
                            FridgeId = new Guid("6092b048-afaf-429c-a95a-07f57ca3a58f"),
                            ProductId = new Guid("9b19425c-2503-48cb-b823-8a123b3a8ce3"),
                            Quantity = 19
                        },
                        new
                        {
                            Id = new Guid("7a3192ae-1bcd-4a4a-85ed-c998acf2e2a7"),
                            FridgeId = new Guid("2fcd1d29-5c3b-4089-b3d1-ec8524069741"),
                            ProductId = new Guid("1605d6a2-5e70-44ed-9393-bccb8e46b910"),
                            Quantity = 6
                        });
                });

            modelBuilder.Entity("ServerFridge.Models.Products", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProductId");

                    b.Property<int>("DefaultQuantity")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("20fadc8c-7b02-4668-b652-073bcde750fc"),
                            DefaultQuantity = 7,
                            Name = "Apple"
                        },
                        new
                        {
                            Id = new Guid("1605d6a2-5e70-44ed-9393-bccb8e46b910"),
                            DefaultQuantity = 5,
                            Name = "Banana"
                        },
                        new
                        {
                            Id = new Guid("9b19425c-2503-48cb-b823-8a123b3a8ce3"),
                            DefaultQuantity = 10,
                            Name = "Sushi rolls"
                        });
                });

            modelBuilder.Entity("ServerFridge.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TimeCreate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ServerFridge.Models.Fridge", b =>
                {
                    b.HasOne("ServerFridge.Models.FridgeModel", "FridgeModel")
                        .WithMany()
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FridgeModel");
                });

            modelBuilder.Entity("ServerFridge.Models.FridgeProducts", b =>
                {
                    b.HasOne("ServerFridge.Models.Fridge", "Fridge")
                        .WithMany()
                        .HasForeignKey("FridgeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerFridge.Models.Products", "Products")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fridge");

                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
